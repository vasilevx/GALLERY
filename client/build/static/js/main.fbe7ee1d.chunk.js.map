{"version":3,"sources":["MainContext.jsx","SignIn.jsx","GalleriesList.jsx","Account.jsx","App.jsx","index.js"],"names":["MainContext","React","createContext","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignIn","classes","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isValidEmail","setIsValidEmail","_useState7","_useState8","isValidPassword","setIsValidPassword","context","useContext","getUsersFromStorage","users","JSON","parse","localStorage","getItem","addUserToStorage","newUsers","push","setItem","stringify","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","error","onChange","event","target","value","test","type","length","Button","color","disabled","onClick","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","user","toggleUserEmail","toggleAuth","err","return","cards","GalleriesList","props","cardGrid","Grid","container","map","card","item","key","xs","sm","md","Card","CardMedia","cardMedia","image","title","CardContent","cardContent","gutterBottom","CardActions","size","icon","marginRight","heroContent","background","padding","heroButtons","paddingTop","paddingBottom","height","flexGrow","footer","Account","isGalleryEmpty","Fragment","AppBar","position","Toolbar","PhotoCamera_default","noWrap","align","userEmail","justify","toggleDialogOpen","boxShadow","shadows","outline","ReactDOM","render","isAuth","setIsAuth","setUserEmail","isDialogOpen","setIsDialogOpen","handleClose","src_MainContext","Provider","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","multiline","rows","rowsMax","style","DialogActions","document","getElementById"],"mappings":"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","file":"static/js/main.fbe7ee1d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MainContext = React.createContext();\r\nexport default MainContext;","import React, { useState, useContext } from 'react';\r\nimport MainContext from './MainContext';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isValidEmail, setIsValidEmail] = useState(false);\r\n    const [isValidPassword, setIsValidPassword] = useState(false);\r\n\r\n    const context = useContext(MainContext);\r\n\r\n    const validateEmail = (email) => {\r\n        const isValid = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return isValid.test(email);\r\n    }\r\n\r\n    const doAuth = () => {\r\n        let users = getUsersFromStorage();\r\n        \r\n        for(let user of users) {\r\n            if(user.email === email) {\r\n                if (user.password === password) {\r\n                    context.toggleUserEmail(email);\r\n                    context.toggleAuth();\r\n                    return;\r\n                } else {\r\n                    setIsValidEmail(false);\r\n                    setIsValidPassword(false);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        addUserToStorage();\r\n        context.toggleUserEmail(email);\r\n        context.toggleAuth();\r\n    }\r\n\r\n    const getUsersFromStorage = () => {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        return users ? users : [];\r\n    }\r\n\r\n    const addUserToStorage = () => {\r\n        let newUsers = getUsersFromStorage();\r\n        newUsers.push({\r\n            email: email,\r\n            password: password\r\n        });\r\n        localStorage.setItem('users', JSON.stringify(newUsers));\r\n    }\r\n\r\n    return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                  Вход в аккаунт\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Ваш E-mail\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  error={!isValidEmail}\r\n                  onChange={(event) => {\r\n                      setEmail(event.target.value);\r\n\r\n                      if(validateEmail(event.target.value)) {\r\n                        setIsValidEmail(true);\r\n                      } else {\r\n                        setIsValidEmail(false);\r\n                      }\r\n                    }}\r\n                    \r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Пароль\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  error={!isValidPassword}\r\n                  onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n\r\n                    if(event.target.value.length === 0) {\r\n                      setIsValidPassword(false);\r\n                    } else {\r\n                      setIsValidPassword(true);\r\n                    }\r\n                  }}\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  disabled={!isValidEmail || !isValidPassword}\r\n                  onClick={doAuth}\r\n                >\r\n                  Вход\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport MainContext from './MainContext';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport default function GalleriesList(props) {\r\n\r\n    return (\r\n        <Container className={props.classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          {cards.map(card => (\r\n            <Grid item key={card} xs={12} sm={6} md={4}>\r\n              <Card className={props.classes.card}>\r\n                <CardMedia\r\n                  className={props.classes.cardMedia}\r\n                  image=\"https://source.unsplash.com/random\"\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent className={props.classes.cardContent}>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Heading\r\n                  </Typography>\r\n                  <Typography>\r\n                    This is a media card. You can use this section to describe the content.\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    View\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Edit\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }","import React, { useState, useContext } from 'react';\r\nimport MainContext from './MainContext';\r\nimport GalleriesList from './GalleriesList';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function Account() {\r\n  const classes = useStyles();\r\n\r\n  const [isGalleryEmpty, setIsGalleryEmpty] = useState(true);\r\n  const context = useContext(MainContext);\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <CameraIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Фотогалерея\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              Фотогалерея пользователя {context.userEmail}\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={3} justify=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={context.toggleDialogOpen}>\r\n                    Создать новую галерею\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick={context.toggleAuth}>\r\n                    Выйти из аккаунта\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n\r\n\r\n        { isGalleryEmpty ? 'НЕТ НИ ОДНОЙ ГАЛЕРЕИ' : <GalleriesList classes={classes} /> }\r\n\r\n\r\n\r\n        \r\n\r\n\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MainContext from './MainContext';\nimport SignIn from './SignIn';\nimport Account from './Account';\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t  position: 'absolute',\n\t  width: 400,\n\t  backgroundColor: theme.palette.background.paper,\n\t  boxShadow: theme.shadows[5],\n\t  padding: theme.spacing(4),\n\t  outline: 'none',\n\t},\n  }));\n\nexport default function App() {\n\tconst [isAuth, setIsAuth] = useState(false);\n\tconst [userEmail, setUserEmail] = useState(null);\n\tconst [isDialogOpen, setIsDialogOpen] = useState(false);\n\n\tconst toggleAuth = () => {\n\t\tsetIsAuth(!isAuth);\n\t}\n\n\tconst toggleUserEmail = (userEmail) => {\n\t\tsetUserEmail(userEmail);\n\t}\n\n\tconst toggleDialogOpen = () => {\n\t\tsetIsDialogOpen(!isDialogOpen);\n\t}\n\n\tconst handleClose = () => {\n\t\t\n\t}\n\n\n\n\n\tconst classes = useStyles();\n\t\n    return (\n\t\t<MainContext.Provider value={{ toggleAuth, userEmail, toggleUserEmail, toggleDialogOpen }}>\n\t\t\t{isAuth ? <Account /> : <SignIn />}\n\n\t\t\t  <Dialog open={isDialogOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Новая галерея</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Чтобы создать новую галерею, нужно заполнить все поля ниже.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Название галереи\"\n            type=\"text\"\n            fullWidth\n          />\n\n<TextField\nmargin=\"dense\"\nlabel=\"Описание галереи\"\nid=\"description\"\n  multiline={true}\n  rows={5}\n  rowsMax={50}\n  fullWidth\n/>\n\n<Button\n\n  variant=\"contained\"\n  component=\"label\"\n  fullWidth\n>\n  Upload File\n  <input\n    type=\"file\"\n    style={{ display: \"none\" }}\n  />\n</Button>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Отменить\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Создать\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n\n\t\t</MainContext.Provider>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \t// componentDidMount() {\n    // \tfetch('/users')\n    //   \t.then(res => res.json())\n    //   \t.then(users => this.setState({ users }));\n  \t// }\n\n  \t// render() {\n    // \treturn (\n\t// \t\t<div className=\"App\">\n    // \t\t\t<h1>Users</h1>\n    //     \t\t{this.state.users.map(user =>\n    //       \t\t\t<div key={user.id}>{user.username}</div>\n    //     \t\t)}\n    //   \t\t</div>\n    // \t);\n  \t// }\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}